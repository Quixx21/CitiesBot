name: CI/CD

on:
  push:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.13"

      - name: Install Poetry
        run: pip install poetry

      - name: Install dependencies
        run: poetry install --no-interaction --no-ansi

      - name: Run linters
        run: ./format.sh --check

      - name: Run tests
        run: poetry run pytest

  docker:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - uses: actions/checkout@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: quixx21/cities-bot:latest
  notify:
    runs-on: ubuntu-latest
    needs: [ build, docker ]
    if: always()
    steps:
      - name: message to telegram (success)
        if: ${{ needs.build.result == 'success' && needs.docker.result == 'success' }}
        run: |
          curl -s -X POST https://api.telegram.org/bot${{ secrets.TG_BOT_TOKEN }}/sendMessage \
          -d chat_id=${{ secrets.TG_CHAT_ID }} \
          -d text="CI/CD success ${{ github.repository }} (commit: ${{ github.sha }})."
      - name: message to telegram (failure)
        if: ${{ needs.build.result != 'success' || needs.docker.result != 'success' }}
        run: |
          curl -s -X POST https://api.telegram.org/bot${{ secrets.TG_BOT_TOKEN }}/sendMessage \
          -d chat_id=${{ secrets.TG_CHAT_ID }} \
          -d text="CI/CD failed in ${{ github.repository }} (commit: ${{ github.sha }})."
    
